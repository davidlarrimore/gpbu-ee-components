<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>50.0</apiVersion>
    <assignments>
        <name>Assign_PAR_Queue</name>
        <label>Assign PAR Queue</label>
        <locationX>1282</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_PAR_Queue.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>ContactId is CreatedById</description>
        <name>assignContact</name>
        <label>Assign Contact</label>
        <locationX>798</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Employee_Contact_Id__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>decType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>assignQueueBenefits</name>
        <label>Assign to Benefits Queue</label>
        <locationX>50</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueBenefits.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>assignQueueHR</name>
        <label>Assign to HR Queue</label>
        <locationX>930</locationX>
        <locationY>1343</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueHR.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>assignQueueLeave</name>
        <label>Assign to Leave Queue</label>
        <locationX>314</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueLeave.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>assignQueueOnboarding</name>
        <label>Assign to Onboarding Queue</label>
        <locationX>754</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueueOnboarding.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>assignQueuePay</name>
        <label>Assign to Pay Queue</label>
        <locationX>1018</locationX>
        <locationY>887</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getQueuePay.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Is the ContactId field blank?</description>
        <name>decContactBlank</name>
        <label>Contact Blank?</label>
        <locationX>930</locationX>
        <locationY>311</locationY>
        <defaultConnector>
            <targetReference>decType</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>outContactBlankYes</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>assignContact</targetReference>
            </connector>
            <label>Blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>decType</name>
        <label>What is Type?</label>
        <locationX>930</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>getQueueHR</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>outTypeBenefits</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Benefits</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueBenefits</targetReference>
            </connector>
            <label>Benefits</label>
        </rules>
        <rules>
            <name>outTypeLeave</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Leave or Time Off</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueLeave</targetReference>
            </connector>
            <label>Leave</label>
        </rules>
        <rules>
            <name>outTypeHRData</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HR Data</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueHR</targetReference>
            </connector>
            <label>HR Data</label>
        </rules>
        <rules>
            <name>outTypeOnboarding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Onboarding</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueueOnboarding</targetReference>
            </connector>
            <label>Onboarding</label>
        </rules>
        <rules>
            <name>outTypePay</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pay</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getQueuePay</targetReference>
            </connector>
            <label>Pay</label>
        </rules>
        <rules>
            <name>PAR_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SF52_Request_for_Personnel_Action</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_PAR_Queue</targetReference>
            </connector>
            <label>PAR Queue</label>
        </rules>
        <rules>
            <name>Employee_Misconduct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Employee Misconduct</stringValue>
                </rightValue>
            </conditions>
            <label>Employee Misconduct</label>
        </rules>
    </decisions>
    <description>This flow assigns cases to certain queues as they are created.  This replaces the Case Creation Settings process.</description>
    <interviewLabel>Case - Creation Settings {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Creation Settings</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_PAR_Queue</name>
        <label>Get PAR Queue</label>
        <locationX>1282</locationX>
        <locationY>767</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_PAR_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PAR_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueBenefits</name>
        <label>Get Benefits Queue</label>
        <locationX>50</locationX>
        <locationY>767</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignQueueBenefits</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Benefits_Admin_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueHR</name>
        <label>Get HR Queue</label>
        <locationX>930</locationX>
        <locationY>1223</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignQueueHR</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>HR_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueLeave</name>
        <label>Get Leave Queue</label>
        <locationX>314</locationX>
        <locationY>767</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignQueueLeave</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Leave_Admin_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueueOnboarding</name>
        <label>Get Onboarding Queue</label>
        <locationX>754</locationX>
        <locationY>767</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignQueueOnboarding</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Onboarding_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getQueuePay</name>
        <label>Get Pay Queue</label>
        <locationX>1018</locationX>
        <locationY>767</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>assignQueuePay</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pay_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>804</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>decContactBlank</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
